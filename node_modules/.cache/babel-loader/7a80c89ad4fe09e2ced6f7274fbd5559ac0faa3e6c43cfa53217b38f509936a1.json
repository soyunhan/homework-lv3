{"ast":null,"code":"var _jsxFileName = \"/Users/hansoyeon/Desktop/React/react/homework-lv3/src/components/input/input.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n/*--------------------------------------------------------*\n * Primitive Input\n *--------------------------------------------------------*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrimitiveInput = _ref => {\n  let {\n    value,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StyledInput, {\n    ...restProps,\n    value: value,\n    type: \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\n/*--------------------------------------------------------*\n * Normal input\n *--------------------------------------------------------*/\n_c = PrimitiveInput;\nconst NormalInput = _ref2 => {\n  _s();\n  let {\n    getValues\n  } = _ref2;\n  const [value, setValue] = useState(\"\");\n  const onChangeHandler = e => {\n    const {\n      value\n    } = e.target;\n    setValue(value);\n    getValues(value);\n  };\n  return /*#__PURE__*/_jsxDEV(PrimitiveInput, {\n    onChange: onChangeHandler,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n/*--------------------------------------------------------*\n * Price format input\n *--------------------------------------------------------*/\n_s(NormalInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c2 = NormalInput;\nconst PriceFormatInput = _ref3 => {\n  _s2();\n  let {\n    getValues\n  } = _ref3;\n  const [value, setValue] = useState(\"0\");\n  const onChangeHandler = _ref4 => {\n    let {\n      target\n    } = _ref4;\n    const regex = /[^0-9]/g; // 숫자 이외의 문자열을 찾는 정규식\n\n    const rawValue = target.value.replaceAll(\",\", \"\");\n    const formattedValue = new Intl.NumberFormat().format(target.value.replaceAll(\",\", \"\"));\n    if (!regex.test(rawValue)) {\n      setValue(formattedValue);\n      getValues && getValues({\n        raw: rawValue,\n        format: formattedValue\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PrimitiveInput, {\n    onChange: onChangeHandler,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s2(PriceFormatInput, \"6hxlXVtVRYC/nPv66Jzg0/15FFY=\");\n_c3 = PriceFormatInput;\nconst Price = PriceFormatInput;\nconst Normal = NormalInput;\nexport {};\nconst StyledInput = styled.input`\n  border: 1px solid #333333;\n  height: 40px;\n  width: 200px;\n  outline: none;\n  border-radius: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  &:focus-within {\n    box-shadow: 0 0 0 1px #000;\n  }\n`;\n_c4 = StyledInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PrimitiveInput\");\n$RefreshReg$(_c2, \"NormalInput\");\n$RefreshReg$(_c3, \"PriceFormatInput\");\n$RefreshReg$(_c4, \"StyledInput\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","PrimitiveInput","_ref","value","restProps","StyledInput","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","NormalInput","_ref2","_s","getValues","setValue","onChangeHandler","e","target","onChange","_c2","PriceFormatInput","_ref3","_s2","_ref4","regex","rawValue","replaceAll","formattedValue","Intl","NumberFormat","format","test","raw","_c3","Price","Normal","input","_c4","$RefreshReg$"],"sources":["/Users/hansoyeon/Desktop/React/react/homework-lv3/src/components/input/input.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n/*--------------------------------------------------------*\n * Primitive Input\n *--------------------------------------------------------*/\n\nconst PrimitiveInput = ({ value, ...restProps }) => {\n  return <StyledInput {...restProps} value={value} type=\"text\" />;\n};\n\n/*--------------------------------------------------------*\n * Normal input\n *--------------------------------------------------------*/\n\nconst NormalInput = ({ getValues }) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChangeHandler = (e) => {\n    const { value } = e.target;\n    setValue(value);\n    getValues(value);\n  };\n\n  return <PrimitiveInput onChange={onChangeHandler} value={value} />;\n};\n\n/*--------------------------------------------------------*\n * Price format input\n *--------------------------------------------------------*/\n\nconst PriceFormatInput = ({ getValues }) => {\n  const [value, setValue] = useState(\"0\");\n\n  const onChangeHandler = ({ target }) => {\n    const regex = /[^0-9]/g; // 숫자 이외의 문자열을 찾는 정규식\n\n    const rawValue = target.value.replaceAll(\",\", \"\");\n    const formattedValue = new Intl.NumberFormat().format(\n      target.value.replaceAll(\",\", \"\")\n    );\n\n    if (!regex.test(rawValue)) {\n      setValue(formattedValue);\n      getValues && getValues({ raw: rawValue, format: formattedValue });\n    }\n  };\n\n  return <PrimitiveInput onChange={onChangeHandler} value={value} />;\n};\n\nconst Price = PriceFormatInput;\nconst Normal = NormalInput;\n\nexport {}\n\nconst StyledInput = styled.input`\n  border: 1px solid #333333;\n  height: 40px;\n  width: 200px;\n  outline: none;\n  border-radius: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  &:focus-within {\n    box-shadow: 0 0 0 1px #000;\n  }\n`;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,cAAc,GAAGC,IAAA,IAA6B;EAAA,IAA5B;IAAEC,KAAK;IAAE,GAAGC;EAAU,CAAC,GAAAF,IAAA;EAC7C,oBAAOF,OAAA,CAACK,WAAW;IAAA,GAAKD,SAAS;IAAED,KAAK,EAAEA,KAAM;IAACG,IAAI,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACjE,CAAC;;AAED;AACA;AACA;AAFAC,EAAA,GAJMV,cAAc;AAQpB,MAAMW,WAAW,GAAGC,KAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC,GAAAF,KAAA;EAChC,MAAM,CAACV,KAAK,EAAEa,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMoB,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEf;IAAM,CAAC,GAAGe,CAAC,CAACC,MAAM;IAC1BH,QAAQ,CAACb,KAAK,CAAC;IACfY,SAAS,CAACZ,KAAK,CAAC;EAClB,CAAC;EAED,oBAAOH,OAAA,CAACC,cAAc;IAACmB,QAAQ,EAAEH,eAAgB;IAACd,KAAK,EAAEA;EAAM;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACpE,CAAC;;AAED;AACA;AACA;AAFAI,EAAA,CAZMF,WAAW;AAAAS,GAAA,GAAXT,WAAW;AAgBjB,MAAMU,gBAAgB,GAAGC,KAAA,IAAmB;EAAAC,GAAA;EAAA,IAAlB;IAAET;EAAU,CAAC,GAAAQ,KAAA;EACrC,MAAM,CAACpB,KAAK,EAAEa,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,GAAG,CAAC;EAEvC,MAAMoB,eAAe,GAAGQ,KAAA,IAAgB;IAAA,IAAf;MAAEN;IAAO,CAAC,GAAAM,KAAA;IACjC,MAAMC,KAAK,GAAG,SAAS,CAAC,CAAC;;IAEzB,MAAMC,QAAQ,GAAGR,MAAM,CAAChB,KAAK,CAACyB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;IACjD,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACC,YAAY,EAAE,CAACC,MAAM,CACnDb,MAAM,CAAChB,KAAK,CAACyB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CACjC;IAED,IAAI,CAACF,KAAK,CAACO,IAAI,CAACN,QAAQ,CAAC,EAAE;MACzBX,QAAQ,CAACa,cAAc,CAAC;MACxBd,SAAS,IAAIA,SAAS,CAAC;QAAEmB,GAAG,EAAEP,QAAQ;QAAEK,MAAM,EAAEH;MAAe,CAAC,CAAC;IACnE;EACF,CAAC;EAED,oBAAO7B,OAAA,CAACC,cAAc;IAACmB,QAAQ,EAAEH,eAAgB;IAACd,KAAK,EAAEA;EAAM;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACpE,CAAC;AAACc,GAAA,CAlBIF,gBAAgB;AAAAa,GAAA,GAAhBb,gBAAgB;AAoBtB,MAAMc,KAAK,GAAGd,gBAAgB;AAC9B,MAAMe,MAAM,GAAGzB,WAAW;AAE1B;AAEA,MAAMP,WAAW,GAAGP,MAAM,CAACwC,KAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAZIlC,WAAW;AAAA,IAAAM,EAAA,EAAAU,GAAA,EAAAc,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}