{"ast":null,"code":"var _jsxFileName = \"/Users/hansoyeon/Desktop/React/react/homework-lv3/src/components/input/Input.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n/*--------------------------------------------------------*\n * Primitive Input\n *--------------------------------------------------------*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrmitiveInput = _ref => {\n  var _value$format;\n  let {\n    value,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StyledInput, {\n    ...restProps,\n    value: (_value$format = value.format) !== null && _value$format !== void 0 ? _value$format : value,\n    type: \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n/*--------------------------------------------------------*\n * normal input\n *--------------------------------------------------------*/\n_c = PrmitiveInput;\nconst NormalInput = _ref2 => {\n  _s();\n  let {\n    getValues\n  } = _ref2;\n  const [value, setValue] = useState(\"\");\n  const onChageHandler = e => {\n    const {\n      value\n    } = e.target;\n    setValue(e.target.value);\n    getValues(value);\n  };\n  return /*#__PURE__*/_jsxDEV(PrmitiveInput, {\n    onChange: onChageHandler,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n/*--------------------------------------------------------*\n * price format input\n *--------------------------------------------------------*/\n_s(NormalInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c2 = NormalInput;\nconst PriceFormatInput = _ref3 => {\n  _s2();\n  let {\n    getValues\n  } = _ref3;\n  const [value, setValue] = useState({\n    raw: \"0\",\n    format: \"0\"\n  });\n  const onChageHandler = _ref4 => {\n    let {\n      target\n    } = _ref4;\n    const rex = /\\D/g;\n    const raw = target.value.replaceAll(\",\", \"\");\n    const format = new Intl.NumberFormat().format(target.value.replaceAll(\",\", \"\"));\n    if (!rex.test(target.value.replaceAll(\",\", \"\"))) {\n      setValue(old => ({\n        ...old,\n        raw,\n        format\n      }));\n      getValues && getValues({\n        raw,\n        format\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PrmitiveInput, {\n    onChange: onChageHandler,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s2(PriceFormatInput, \"SXMZ+jEiVJS1ClKUuE3smNWtelQ=\");\n_c3 = PriceFormatInput;\nconst Price = PriceFormatInput;\nconst Normal = NormalInput;\nexport { Price, Normal };\nconst StyledInput = styled.input`\n  border: 1px solid #333333;\n  height: 40px;\n  width: 200px;\n  outline: none;\n  border-radius: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  &:focus-within {\n    box-shadow: 0 0 0 1px #000;\n  }\n`;\n_c4 = StyledInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PrmitiveInput\");\n$RefreshReg$(_c2, \"NormalInput\");\n$RefreshReg$(_c3, \"PriceFormatInput\");\n$RefreshReg$(_c4, \"StyledInput\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","PrmitiveInput","_ref","_value$format","value","restProps","StyledInput","format","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","NormalInput","_ref2","_s","getValues","setValue","onChageHandler","e","target","onChange","_c2","PriceFormatInput","_ref3","_s2","raw","_ref4","rex","replaceAll","Intl","NumberFormat","test","old","_c3","Price","Normal","input","_c4","$RefreshReg$"],"sources":["/Users/hansoyeon/Desktop/React/react/homework-lv3/src/components/input/Input.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n/*--------------------------------------------------------*\n * Primitive Input\n *--------------------------------------------------------*/\n\nconst PrmitiveInput = ({ value, ...restProps }) => {\n  return (\n    <StyledInput {...restProps} value={value.format ?? value} type=\"text\" />\n  );\n};\n\n/*--------------------------------------------------------*\n * normal input\n *--------------------------------------------------------*/\n\nconst NormalInput = ({ getValues }) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChageHandler = (e) => {\n    const { value } = e.target;\n    setValue(e.target.value);\n    getValues(value);\n  };\n\n  return <PrmitiveInput onChange={onChageHandler} value={value} />;\n};\n\n/*--------------------------------------------------------*\n * price format input\n *--------------------------------------------------------*/\n\nconst PriceFormatInput = ({ getValues }) => {\n  const [value, setValue] = useState({\n    raw: \"0\",\n    format: \"0\",\n  });\n\n  const onChageHandler = ({ target }) => {\n    const rex = /\\D/g;\n\n    const raw = target.value.replaceAll(\",\", \"\");\n    const format = new Intl.NumberFormat().format(\n      target.value.replaceAll(\",\", \"\")\n    );\n\n    if (!rex.test(target.value.replaceAll(\",\", \"\"))) {\n      setValue((old) => ({\n        ...old,\n        raw,\n        format,\n      }));\n\n      getValues && getValues({ raw, format });\n    }\n  };\n\n  return <PrmitiveInput onChange={onChageHandler} value={value} />;\n};\n\nconst Price = PriceFormatInput;\nconst Normal = NormalInput;\n\nexport { Price, Normal };\n\nconst StyledInput = styled.input`\n  border: 1px solid #333333;\n  height: 40px;\n  width: 200px;\n  outline: none;\n  border-radius: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  &:focus-within {\n    box-shadow: 0 0 0 1px #000;\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}